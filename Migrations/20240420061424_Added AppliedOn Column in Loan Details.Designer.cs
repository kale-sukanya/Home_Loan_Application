// <auto-generated />
using System;
using CaseStudyFinal.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CaseStudyFinal.Migrations
{
    [DbContext(typeof(CaseStudyFinalContext))]
    [Migration("20240420061424_Added AppliedOn Column in Loan Details")]
    partial class AddedAppliedOnColumninLoanDetails
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CaseStudyFinal.Models.Account", b =>
                {
                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicationTrackingTrackerID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrackerID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountNumber");

                    b.HasIndex("ApplicationTrackingTrackerID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("CaseStudyFinal.Models.ApplicationTracking", b =>
                {
                    b.Property<string>("TrackerID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AadharNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoanDetailsApplicationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PersonalDetailsAadharNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrackerID");

                    b.HasIndex("LoanDetailsApplicationId");

                    b.HasIndex("PersonalDetailsAadharNo");

                    b.ToTable("ApplicationTracking");
                });

            modelBuilder.Entity("CaseStudyFinal.Models.Documents", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentId"), 1L, 1);

                    b.Property<string>("ApplicationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateUploaded")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoanDetailsApplicationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocumentId");

                    b.HasIndex("LoanDetailsApplicationId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("CaseStudyFinal.Models.LoanDetails", b =>
                {
                    b.Property<string>("ApplicationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("AppliedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstimateAmount")
                        .HasColumnType("int");

                    b.Property<double>("InterestRate")
                        .HasColumnType("float");

                    b.Property<int>("LoanAmount")
                        .HasColumnType("int");

                    b.Property<double>("MaxLoanAmountGrantable")
                        .HasColumnType("float");

                    b.Property<int>("NetSalary")
                        .HasColumnType("int");

                    b.Property<string>("OrganizationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RetirementAge")
                        .HasColumnType("int");

                    b.Property<int>("Tenure")
                        .HasColumnType("int");

                    b.Property<string>("TypeOfEmployment")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("ApplicationId");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("CaseStudyFinal.Models.PersonalDetails", b =>
                {
                    b.Property<string>("AadharNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoanDetailsApplicationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PanNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisterEmailId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AadharNo");

                    b.HasIndex("LoanDetailsApplicationId");

                    b.HasIndex("RegisterEmailId");

                    b.ToTable("PersonalDetails");
                });

            modelBuilder.Entity("CaseStudyFinal.Models.Register", b =>
                {
                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmailId");

                    b.ToTable("Registers");
                });

            modelBuilder.Entity("CaseStudyFinal.Models.Account", b =>
                {
                    b.HasOne("CaseStudyFinal.Models.ApplicationTracking", "ApplicationTracking")
                        .WithMany()
                        .HasForeignKey("ApplicationTrackingTrackerID");

                    b.Navigation("ApplicationTracking");
                });

            modelBuilder.Entity("CaseStudyFinal.Models.ApplicationTracking", b =>
                {
                    b.HasOne("CaseStudyFinal.Models.LoanDetails", "LoanDetails")
                        .WithMany()
                        .HasForeignKey("LoanDetailsApplicationId");

                    b.HasOne("CaseStudyFinal.Models.PersonalDetails", "PersonalDetails")
                        .WithMany()
                        .HasForeignKey("PersonalDetailsAadharNo");

                    b.Navigation("LoanDetails");

                    b.Navigation("PersonalDetails");
                });

            modelBuilder.Entity("CaseStudyFinal.Models.Documents", b =>
                {
                    b.HasOne("CaseStudyFinal.Models.LoanDetails", "LoanDetails")
                        .WithMany()
                        .HasForeignKey("LoanDetailsApplicationId");

                    b.Navigation("LoanDetails");
                });

            modelBuilder.Entity("CaseStudyFinal.Models.PersonalDetails", b =>
                {
                    b.HasOne("CaseStudyFinal.Models.LoanDetails", "LoanDetails")
                        .WithMany()
                        .HasForeignKey("LoanDetailsApplicationId");

                    b.HasOne("CaseStudyFinal.Models.Register", "Register")
                        .WithMany()
                        .HasForeignKey("RegisterEmailId");

                    b.Navigation("LoanDetails");

                    b.Navigation("Register");
                });
#pragma warning restore 612, 618
        }
    }
}
